import React, { useEffect, useState } from "react";
import Sidebar from "./Sidebar";
import AOS from "aos";
import "aos/dist/aos.css";
import { db } from "./firebaseConfig"; // Import Firebase
import { collection, getDocs, updateDoc, doc } from "firebase/firestore";

const UserData = () => {
  const [users, setUsers] = useState([]);

  useEffect(() => {
    AOS.init({ duration: 1000 });
    fetchUsers();
  }, []);

  // Fetch Users from Firebase Firestore
  const fetchUsers = async () => {
    try {
      const usersCollection = collection(db, "users");
      const snapshot = await getDocs(usersCollection);
      const userData = snapshot.docs.map((doc) => ({
        id: doc.id,
        ...doc.data(),
      }));
      setUsers(userData);
    } catch (error) {
      console.error("Error fetching users:", error);
    }
  };

  // Function to update user status based on investment
  const updateUserStatus = async (userId, newStatus) => {
    try {
      const userDoc = doc(db, "users", userId);
      await updateDoc(userDoc, { status: newStatus });
      fetchUsers(); // Refresh the data after update
    } catch (error) {
      console.error("Error updating user status:", error);
    }
  };

  return (
    <div className="flex h-full bg-gray-200 mt-30">
      <Sidebar />

      <div className="p-6 bg-gray-100 min-h-screen w-full">
        <h1 className="text-2xl font-semibold mb-4" data-aos="fade-down">
          User Data
        </h1>

        <div className="overflow-x-auto" data-aos="fade-up">
          <table className="min-w-full bg-white shadow-md rounded-lg overflow-hidden">
            <thead className="bg-gray-800 text-white">
              <tr>
                <th className="py-2 px-4 text-left">ID</th>
                <th className="py-2 px-4 text-left">Name</th>
                <th className="py-2 px-4 text-left">Email</th>
                <th className="py-2 px-4 text-left">Plan</th>
                <th className="py-2 px-4 text-left">Status</th>
                <th className="py-2 px-4 text-left">Action</th>
              </tr>
            </thead>
            <tbody>
              {users.map((user, index) => (
                <tr key={index} className="border-b hover:bg-gray-100" data-aos="fade-up" data-aos-delay={index * 200}>
                  <td className="py-2 px-4">{user.id}</td>
                  <td className="py-2 px-4">{user.name}</td>
                  <td className="py-2 px-4">{user.email}</td>
                  <td className="py-2 px-4">{user.plan || "No Plan"}</td>
                  <td className={`py-2 px-4 font-semibold ${user.status === "Active" ? "text-green-600" : "text-red-600"}`}>
                    {user.status}
                  </td>
                  <td className="py-2 px-4">
                    {user.status === "Active" ? (
                      <button
                        onClick={() => updateUserStatus(user.id, "Inactive")}
                        className="bg-red-500 text-white px-3 py-1 rounded"
                      >
                        Withdraw All (Deactivate)
                      </button>
                    ) : (
                      <button
                        onClick={() => updateUserStatus(user.id, "Active")}
                        className="bg-green-500 text-white px-3 py-1 rounded"
                      >
                        Invest Again (Activate)
                      </button>
                    )}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};

export default UserData;
